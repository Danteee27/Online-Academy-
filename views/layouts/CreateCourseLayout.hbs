<!--Phan Huy create courses layout-->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>E-Commerce Application (20KTPMB)</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css"
          integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" type="text/css" href="/css/createCourse.css"/>
    <style>
        * {
            font-size: 14px;
        }
    </style>
<!--    <script>-->
<!--        // import { dirname } from 'path';-->
<!--        // import { fileURLToPath } from 'url';-->
<!--        const formElem = document.querySelector('form');-->
<!--        formElem.addEventListener('submit', async (e) => {-->
<!--            e.preventDefault();-->
<!--            // const __dirname = dirname(fileURLToPath(import.meta.url));-->
<!--            console.log(__dirname);-->
<!--            await fetch('/add', {-->
<!--                method: 'POST',-->
<!--                body: new FormData(formElem),-->
<!--            });-->
<!--        });</script>-->
    <script src="https://cdn.tiny.cloud/1/ia81okpopglafbfo3qtv7pzo8ep13mc3umojyde5ixoe0tgx/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
    <script>
        tinymce.init({
            selector: 'upImage',  // change this value according to your HTML
            file_picker_types: 'file image media'
        });
        // tinymce.init({
        //     selector: 'upImage',  // change this value according to your HTML
        //     plugins: 'image',
        //     toolbar: 'image'
        // });
        tinymce.init({
            // Select the element(s) to add TinyMCE to using any valid CSS selector
            selector: 'textarea',

            // Tip - To keep TinyMCE lean, only include the plugins you need.
            plugins: `a11ychecker advcode advlist advtable anchor autocorrect autosave editimage image link linkchecker lists media mediaembed pageembed powerpaste searchreplace table template tinymcespellchecker visualblocks wordcount`,
            // Configure the toolbar so it fits your app. There are many
            // different configuration options available:
            // https://www.tiny.cloud/docs/tinymce/6/toolbar-configuration-options/
            toolbar: 'undo redo | styles | bold italic underline strikethrough | align | table link image media pageembed | bullist numlist outdent indent | spellcheckdialog a11ycheck code',

            // The Accessibility Checker plugin offers extensive controls over which
            // level of compliance to test against and which rules to enforce.
            // https://www.tiny.cloud/docs/tinymce/6/a11ychecker/
            a11ychecker_level: 'aaa',

            // Configure the style menu and define available formats
            // Here, we have defined a medium sized image format as an example.
            // There is a lot more you can do with formats:
            // https://www.tiny.cloud/docs/tinymce/6/filter-content/
            style_formats: [
                {title: 'Heading 1', block: 'h1'},
                {title: 'Heading 2', block: 'h2'},
                {title: 'Paragraph', block: 'p'},
                {title: 'Blockquote', block: 'blockquote'},
                {title: 'Image formats'},
                {title: 'Medium', selector: 'img', classes: 'medium'},
            ],

            // Turn off manual resizing of images as we want to control image sizes
            // using the formats previously specified.
            // https://www.tiny.cloud/docs/tinymce/6/content-behavior-options/#object_resizing
            object_resizing: false,

            // TinyMCE offers a wide range of options to control what classes, styles
            // and attributes are allowed in the content. All other classes will be
            // filtered out.
            // https://www.tiny.cloud/docs/tinymce/6/content-filtering/#valid_classes
            valid_classes: {
                'img': 'medium',
                'div': 'related-content'
            },

            // Enable image fig captions
            // https://www.tiny.cloud/docs/tinymce/6/image/#image_caption
            image_caption: true,

            // Templates is useful for when users need to insert repeatable content,
            // for example a related content block.
            // https://www.tiny.cloud/docs/tinymce/6/template/
            templates: [
                {
                    title: 'Related content',
                    description: 'This template inserts a related content block',
                    content: '<div class="related-content"><h3>Related content</h3><p><strong>{$rel_lede}</strong> {$rel_body}</p></div>'
                }
            ],

            // This option makes it easy to inject dynamic content into the template.
            template_replace_values: {
                rel_lede: 'Lorem ipsum',
                rel_body: 'dolor sit amet...',
            },

            // Specifies the dynamic content inside the insert template dialog preview
            template_preview_replace_values: {
                rel_lede: 'Lorem ipsum',
                rel_body: 'dolor sit amet...',
            },

            // Prevent editing of the related content block by making the whole
            // block noneditable.
            // https://www.tiny.cloud/docs/tinymce/6/content-behavior-options/#noneditable_class
            noneditable_class: 'related-content',

            // TinyMCE supports multilingual content. By defining the language
            // not only are you helping with accessibility, the spellchecker plugin
            // also switches language.
            // https://www.tiny.cloud/docs/tinymce/6/content-localization/#content_langs
            content_langs: [
                {title: 'English (US)', code: 'en_US'},
                {title: 'French', code: 'fr'}
            ],

            // Specify the height of the editor, including toolbars and the statusbar.
            // https://www.tiny.cloud/docs/tinymce/6/customize-ui/#changing-editor-height-and-width
            height: 540,

            // The following css will be injected into the editor, extending
            // the default styles.
            // In a real world scenario, it's recommended to use the content_css
            // option to load a separate CSS file. This makes editing easier too.
            // https://www.tiny.cloud/docs/tinymce/6/add-css-options/
            content_style: `
          img {
            height: auto;
            margin: auto;
            padding: 10px;
            display: block;
          }
          img.medium {
            max-width: 25%;
          }
        `

            // Next step: Check out Tiny Drive for easy cloud storage of your users'
            // images and media. Integrates seamlessly with TinyMCE.
            // https://www.tiny.cloud/drive/
        });
    </script>
    {{{_sections.css}}}
</head>

<body  style="background-image: url(https://c4.wallpaperflare.com/wallpaper/328/34/468/minimalism-cube-simple-artwork-wallpaper-preview.jpg)">
<nav class="navbar navbar-expand-lg navbar-light bg-light shadow">
    <a class="navbar-brand" href="#">
        <i class="fa fa-home fa-lg" aria-hidden="true"></i>
    </a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item active">
                <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">Link</a>
            </li>
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" role="button" data-toggle="dropdown" aria-expanded="false">
                    Dropdown
                </a>
                <div class="dropdown-menu">
                    <a class="dropdown-item" href="#">Action</a>
                    <a class="dropdown-item" href="#">Another action</a>
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item" href="#">Something else here</a>
                </div>
            </li>
            <li class="nav-item">
                <a class="nav-link disabled">Disabled</a>
            </li>
        </ul>
        <ul class="navbar-nav">
            {{#if auth}}
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button" data-toggle="dropdown" aria-expanded="false">
                        Welcome, <b>{{authUser.name}}</b>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right">
                        <a class="dropdown-item" href="/account/profile">
                            <i class="fa fa-user" aria-hidden="true"></i>
                            Profile
                        </a>
                        <div class="dropdown-divider"></div>
                        <form id="frmLogout" action="/account/logout" method="post"></form>
                        <a class="dropdown-item" href="javascript: $('#frmLogout').submit();">
                            <i class="fa fa-sign-out" aria-hidden="true"></i>
                            Logout
                        </a>
                    </div>
                </li>
            {{else}}
                <li class="nav-item">
                    <a class="nav-link" href="/account/login">Login</a>
                </li>

                <li class="nav-item">
                    <a class="nav-link" href="/account/register">Register</a>
                </li>
            {{/if}}
        </ul>
    </div>
</nav>
            {{{body}}}
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"
        integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN"
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.min.js"
        integrity="sha384-+sLIOodYLS7CIrQpBjl+C7nPvqq+FbNUBDunl/OZv93DB7Ln/533i8e/mZXLi/P+"
        crossorigin="anonymous"></script>
<script>function readURL(input) {
    if (input.files && input.files[0]) {

        var reader = new FileReader();

        reader.onload = function(e) {
            $('.image-upload-wrap').hide();

            $('.file-upload-image').attr('src', e.target.result);
            $('.file-upload-content').show();

            $('.image-title').html(input.files[0].name);
        };

        reader.readAsDataURL(input.files[0]);

    } else {
        removeUpload();
    }
}

function removeUpload() {
    $('.file-upload-input').replaceWith($('.file-upload-input').clone());
    $('.file-upload-content').hide();
    $('.image-upload-wrap').show();
}
$('.image-upload-wrap').bind('dragover', function () {
    $('.image-upload-wrap').addClass('image-dropping');
});
$('.image-upload-wrap').bind('dragleave', function () {
    $('.image-upload-wrap').removeClass('image-dropping');
});</script>
<script class="jsbin" src="https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"></script>
{{{_sections.js}}}
</body>

</html>